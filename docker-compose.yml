volumes:
  node_modules:
  vscode_extensions:
  vscode_insiders_extensions:

services:
  tests: &lib
    image: icalia-actions/aws-sqs-teardown-queue:testing-latest
    build: &lib_build
      target: testing
      context: .
      args:
        DEVELOPER_UID: ${UID:-1000}
        DEVELOPER_USERNAME: ${USER:-you}
    command: yarn test
    volumes:
      - .:/workspaces/aws-sqs-teardown-queue
      - node_modules:/workspaces/aws-sqs-teardown-queue/node_modules
    profiles: # See https://docs.docker.com/compose/profiles
      - ci

  publisher:
    <<: *lib
    image: icalia-actions/aws-sqs-teardown-queue:latest
    build:
      <<: *lib_build
      target: release
    command: yarn publish --non-interactive --access public
    environment:
      NPM_AUTH_TOKEN: ${NPM_AUTH_TOKEN}
    profiles: # See https://docs.docker.com/compose/profiles
      - ci
  
  devcontainer:
    image: icalia-actions/aws-sqs-teardown-queue:development
    build:
      context: .
      dockerfile: Dockerfile
      target: development
      args:
        DEVELOPER_UID: ${UID:-1000}
        DEVELOPER_USERNAME: ${USER:-you}
    entrypoint: /workspaces/aws-sqs-teardown-queue/bin/dev-entrypoint
    volumes:
      - .:/workspaces/aws-sqs-teardown-queue
      - node_modules:/workspaces/aws-sqs-teardown-queue/node_modules
      - vscode_extensions:/home/${USER:-you}/.vscode-server/extensions
      - vscode_insiders_extensions:/home/${USER:-you}/.vscode-server-insiders/extensions
    
    # Keep the stdin open, so we can attach to our app container's process
    # and do things such as byebug, etc:
    stdin_open: true

    # Enable sending signals (CTRL+C, CTRL+P + CTRL+Q) into the container:
    tty: true

    # The command we want to execute by default when running the container
    # [Optional] Required for ptrace-based debuggers like C++, Go, and Rust
    cap_add:
      - SYS_PTRACE
      - NET_ADMIN
    security_opt:
      - seccomp:unconfined

    command: vscode-wait # Éste comando está definido en `bin/dev-entrypoint`

    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      
      VSCODE_CONTEXT: "yes"

      # Use VSCode as editor:
      EDITOR: code -w